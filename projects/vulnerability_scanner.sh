#!/bin/bash

# Student Name: BUGIRI WILSON GOAL
# Program Code: ZX301
# Class Code: CFC0324
# Lecturer Name: [Lecturer Name]

# Project: VULNER - Automated Penetration Testing Script
# Description: Automates network scanning, weak password checking, and vulnerability mapping.

# Suggested tools: Nmap, Hydra, Searchsploit


# Function to validate IP address or network range
validate_network() {
    if [[ ! $1 =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}(/[0-9]{1,2})?$ ]]; then
        echo "Invalid network format. Please use CIDR notation (e.g., 192.168.1.0/24)."
        exit 1
    fi
}

# Function to scan network (Basic or Full)
scan_network() {
    local network=$1
    local mode=$2
    local output_dir=$3

    echo "[*] Starting network scan on $network..."
    
    if [[ $mode == "Basic" ]]; then
        echo "[*] Running Basic scan (TCP/UDP ports and services)..."
        nmap -sS -sU -sV -oN "$output_dir/basic_scan.txt" "$network"
    elif [[ $mode == "Full" ]]; then
        echo "[*] Running Full scan (NSE and vulnerabilities)..."
        nmap -sS -sU -sV --script vuln -oN "$output_dir/full_scan.txt" "$network"
        echo "[*] Checking vulnerabilities with Searchsploit..."
        searchsploit -n --nmap "$output_dir/full_scan.txt" > "$output_dir/vulnerabilities.txt"
    fi
}

# Function to check weak passwords
check_weak_passwords() {
    local network=$1
    local output_dir=$2
    local password_list=$3

    echo "[*] Checking for weak passwords on login services (SSH, RDP, FTP, TELNET)..."

    # Default password list if none provided
    if [[ -z $password_list ]]; then
        password_list="/tmp/default_passwords.lst"
        echo -e "admin\npassword\n123456\nroot" > "$password_list" # Simple default list
    fi

    # Hydra for weak password testing
    for service in ssh rdp ftp telnet; do
        echo "[*] Testing $service for weak credentials..."
        hydra -L "$password_list" -P "$password_list" -o "$output_dir/weak_$service.txt" "$service://$network" -t 4
    done
}

# Function to save results to ZIP
save_results() {
    local output_dir=$1
    echo "[*] Saving results to $output_dir/results.zip..."
    zip -r "$output_dir/results.zip" "$output_dir"/*.txt
}

# Main script starts here
echo "=== Project: VULNER - Penetration Testing Automation ==="

# 1. Get user input
echo -n "Enter network to scan (e.g., 192.168.1.0/24): "
read network
validate_network "$network"

echo -n "Enter output directory name: "
read output_dir
mkdir -p "$output_dir" || { echo "Failed to create directory!"; exit 1; }

echo "Choose scan type: (1) Basic (TCP/UDP + weak passwords),\n (2) Full (NSE + vulnerabilities)"
echo -n "Enter 1 or 2: "
read choice
if [[ $choice == "1" ]]; then
    mode="Basic"
elif [[ $choice == "2" ]]; then
    mode="Full"
else
    echo "Invalid choice. Exiting."
    exit 1
fi

echo -n "Provide custom password list file (or press Enter for default): "
read password_list
if [[ ! -f $password_list && -n $password_list ]]; then
    echo "Password file not found. Using default."
    password_list=""
fi

# 2. Perform network scan
scan_network "$network" "$mode" "$output_dir"

# 3. Check weak passwords
check_weak_passwords "$network" "$output_dir" "$password_list"

# 4. Log and display results
echo "[*] Scan complete. Results saved in $output_dir."
cat "$output_dir"/*.txt

# 5. Allow searching in results
echo -n "Search results for a keyword (or press Enter to skip): "
read keyword
if [[ -n $keyword ]]; then
    grep -r "$keyword" "$output_dir"/*.txt
fi

# 6. Save to ZIP
save_results "$output_dir"

echo "[*] Done! Check $output_dir/results.zip for all results."